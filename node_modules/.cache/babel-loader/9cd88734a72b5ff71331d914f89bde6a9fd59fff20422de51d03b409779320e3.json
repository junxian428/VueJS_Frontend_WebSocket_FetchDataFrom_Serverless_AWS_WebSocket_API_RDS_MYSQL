{"ast":null,"code":"import { ref } from 'vue';\nimport WebSocketClient from 'ws';\nexport default {\n  setup() {\n    const connectionStatus = ref('Not connected');\n    let socket = null;\n    const connectWebSocket = () => {\n      socket = new WebSocketClient('wss://32zhhpmuta.execute-api.us-east-1.amazonaws.com/production');\n      socket.onopen = () => {\n        connectionStatus.value = 'Connected';\n      };\n      socket.onmessage = event => {\n        console.log('Received message:', event.data);\n      };\n      socket.onclose = () => {\n        connectionStatus.value = 'Disconnected';\n      };\n    };\n    const sendMessage = () => {\n      if (socket && socket.readyState === WebSocket.OPEN) {\n        socket.send('Hello from Vue.js');\n      }\n    };\n    return {\n      connectionStatus,\n      connectWebSocket,\n      sendMessage\n    };\n  },\n  beforeUnmount() {\n    if (socket) {\n      socket.close();\n    }\n  }\n};","map":{"version":3,"names":["ref","WebSocketClient","setup","connectionStatus","socket","connectWebSocket","onopen","value","onmessage","event","console","log","data","onclose","sendMessage","readyState","WebSocket","OPEN","send","beforeUnmount","close"],"sources":["D:\\Project\\PROOFOFCONCEPT3\\VueJS_Flask_Socket-main\\VueJS_Flask_Socket-main\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>WebSocket Connection Example</h1>\n    <p>Status: {{ connectionStatus }}</p>\n    <button @click=\"sendMessage\">Send Message</button>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\nimport WebSocketClient from 'ws';\n\nexport default {\n  setup() {\n    const connectionStatus = ref('Not connected');\n    let socket = null;\n\n    const connectWebSocket = () => {\n      socket = new WebSocketClient('wss://32zhhpmuta.execute-api.us-east-1.amazonaws.com/production');\n\n      socket.onopen = () => {\n        connectionStatus.value = 'Connected';\n      };\n\n      socket.onmessage = (event) => {\n        console.log('Received message:', event.data);\n      };\n\n      socket.onclose = () => {\n        connectionStatus.value = 'Disconnected';\n      };\n    };\n\n    const sendMessage = () => {\n      if (socket && socket.readyState === WebSocket.OPEN) {\n        socket.send('Hello from Vue.js');\n      }\n    };\n\n    return {\n      connectionStatus,\n      connectWebSocket,\n      sendMessage,\n    };\n  },\n  beforeUnmount() {\n    if (socket) {\n      socket.close();\n    }\n  },\n};\n</script>\n\n<style>\n/* Add your CSS styles here */\n</style>\n"],"mappings":"AASA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,eAAc,MAAO,IAAI;AAEhC,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,gBAAe,GAAIH,GAAG,CAAC,eAAe,CAAC;IAC7C,IAAII,MAAK,GAAI,IAAI;IAEjB,MAAMC,gBAAe,GAAIA,CAAA,KAAM;MAC7BD,MAAK,GAAI,IAAIH,eAAe,CAAC,iEAAiE,CAAC;MAE/FG,MAAM,CAACE,MAAK,GAAI,MAAM;QACpBH,gBAAgB,CAACI,KAAI,GAAI,WAAW;MACtC,CAAC;MAEDH,MAAM,CAACI,SAAQ,GAAKC,KAAK,IAAK;QAC5BC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,KAAK,CAACG,IAAI,CAAC;MAC9C,CAAC;MAEDR,MAAM,CAACS,OAAM,GAAI,MAAM;QACrBV,gBAAgB,CAACI,KAAI,GAAI,cAAc;MACzC,CAAC;IACH,CAAC;IAED,MAAMO,WAAU,GAAIA,CAAA,KAAM;MACxB,IAAIV,MAAK,IAAKA,MAAM,CAACW,UAAS,KAAMC,SAAS,CAACC,IAAI,EAAE;QAClDb,MAAM,CAACc,IAAI,CAAC,mBAAmB,CAAC;MAClC;IACF,CAAC;IAED,OAAO;MACLf,gBAAgB;MAChBE,gBAAgB;MAChBS;IACF,CAAC;EACH,CAAC;EACDK,aAAaA,CAAA,EAAG;IACd,IAAIf,MAAM,EAAE;MACVA,MAAM,CAACgB,KAAK,CAAC,CAAC;IAChB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}