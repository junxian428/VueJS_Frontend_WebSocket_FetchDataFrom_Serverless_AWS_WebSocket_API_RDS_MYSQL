{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"WebSocket Connection Example\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"p\", null, \"Status: \" + _toDisplayString($setup.connectionStatus), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.sendMessage && $setup.sendMessage(...args))\n  }, \"Send Message\")]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_toDisplayString","$setup","connectionStatus","onClick","_cache","args","sendMessage"],"sources":["D:\\Project\\PROOFOFCONCEPT3\\VueJS_Flask_Socket-main\\VueJS_Flask_Socket-main\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>WebSocket Connection Example</h1>\n    <p>Status: {{ connectionStatus }}</p>\n    <button @click=\"sendMessage\">Send Message</button>\n  </div>\n</template>\n\n<script>\nimport { ref, onBeforeUnmount } from 'vue';\nimport WebSocketClient from 'ws';\n\nexport default {\n  setup() {\n    const connectionStatus = ref('Not connected');\n    let socket = null;\n\n    const connectWebSocket = () => {\n      socket = new WebSocketClient('wss://32zhhpmuta.execute-api.us-east-1.amazonaws.com/production');\n\n      socket.onopen = () => {\n        connectionStatus.value = 'Connected';\n      };\n\n      socket.onmessage = (event) => {\n        console.log('Received message:', event.data);\n      };\n\n      socket.onclose = () => {\n        connectionStatus.value = 'Disconnected';\n      };\n    };\n\n    const sendMessage = () => {\n      if (socket && socket.readyState === WebSocket.OPEN) {\n        socket.send('Hello from Vue.js');\n      }\n    };\n\n    onBeforeUnmount(() => {\n      if (socket) {\n        socket.close();\n      }\n    });\n\n    return {\n      connectionStatus,\n      connectWebSocket,\n      sendMessage,\n    };\n  },\n};\n</script>\n\n<style>\n/* Add your CSS styles here */\n</style>\n"],"mappings":";gCAEIA,mBAAA,CAAqC,YAAjC,8BAA4B;;;uBADlCC,mBAAA,CAIM,cAHJC,UAAqC,EACrCF,mBAAA,CAAqC,WAAlC,UAAQ,GAAAG,gBAAA,CAAGC,MAAA,CAAAC,gBAAgB,kBAC9BL,mBAAA,CAAkD;IAAzCM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEJ,MAAA,CAAAK,WAAA,IAAAL,MAAA,CAAAK,WAAA,IAAAD,IAAA,CAAW;KAAE,cAAY,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}